"""Initial migration with connections table

Revision ID: 8cc99d8fb22a
Revises: 
Create Date: 2025-06-13 13:07:21.266293

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8cc99d8fb22a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('column_descriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.Column('column_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('data_type', sa.String(length=100), nullable=True),
    sa.Column('variable_range', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_column_descriptions_connection_id'), 'column_descriptions', ['connection_id'], unique=False)
    op.create_table('connections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('server', sa.String(length=255), nullable=False),
    sa.Column('database_name', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('table_name', sa.String(length=255), nullable=False),
    sa.Column('driver', sa.String(length=200), nullable=True),
    sa.Column('status', postgresql.ENUM('testing', 'test_success', 'test_failed', 'generating_data', 'data_generated', 'training', 'trained', 'training_failed', name='connection_status'), nullable=True),
    sa.Column('test_successful', sa.Boolean(), nullable=True),
    sa.Column('test_error_message', sa.Text(), nullable=True),
    sa.Column('sample_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('column_descriptions_uploaded', sa.Boolean(), nullable=True),
    sa.Column('initial_prompt', sa.Text(), nullable=True),
    sa.Column('column_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('generated_examples_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('trained_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('training_examples',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('sql', sa.Text(), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_examples_connection_id'), 'training_examples', ['connection_id'], unique=False)
    op.create_table('training_tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=True),
    sa.Column('task_type', postgresql.ENUM('test_connection', 'generate_data', 'train_model', 'query', name='task_type'), nullable=False),
    sa.Column('status', postgresql.ENUM('pending', 'running', 'completed', 'failed', name='task_status'), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('logs', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_tasks_connection_id'), 'training_tasks', ['connection_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_training_tasks_connection_id'), table_name='training_tasks')
    op.drop_table('training_tasks')
    op.drop_index(op.f('ix_training_examples_connection_id'), table_name='training_examples')
    op.drop_table('training_examples')
    op.drop_table('connections')
    op.drop_index(op.f('ix_column_descriptions_connection_id'), table_name='column_descriptions')
    op.drop_table('column_descriptions')
    # ### end Alembic commands ###
