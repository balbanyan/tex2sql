# docker-compose.yml - Use this for production deployment.
# It pulls pre-built images from Docker Hub.

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tex2sql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: jalalirs/tex2sql-backend:latest # <--- Pulls from Docker Hub
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/tex2sql
    volumes:
      - ./backend/data:/app/data
      - ./backend/uploads:/app/uploads
    ports:
      - "6020:6020"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    image: jalalirs/tex2sql-frontend:latest # <--- Pulls from Docker Hub
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:6020

volumes:
  postgres_data:
